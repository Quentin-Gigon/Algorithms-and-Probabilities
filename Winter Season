class Main {
      static double[][] f;
      static double[] probs;  
  
    public static void main(String[] args) {

      
        // Uncomment this line if you want to read from a file
        // In.open("public/sample.in");
        
        int t = In.readInt();
        for (int i = 0; i < t; i++) {
            testCase();
        }
        
        // Uncomment this line if you want to read from a file
        // In.close();
    }
    
    public static double solve(int i, int j){
          if (j == 0) {
            return 1.0;
          }
          if (i==0){
            return 0.0;
          }
          if (f[i][j] != -1.0){
            return f[i][j];
          }
          f[i][j] = (probs[i]*solve(i-1, j-1)) + ((1-probs[i])*solve(i-1, j));
          return f[i][j];
          
        }

    public static void testCase() {
        // Input using In.java class
        int n = In.readInt();
        int k = In.readInt();
        probs = new double[n+1];
        
        //store probabilities pi in array
        for (int i = 1; i <= n; i++) {
            probs[i] = In.readDouble();
        }
        
        //initialize dp table
        f = new double[n+1][k+1];
        
        //initialize dp table 
        for (int i = 0; i <= n; i++) {
          for (int j = 0; j <= k; j++) {
            f[i][j] = -1.0;
          }
        }
        
        // Output solution
        Out.println(solve(n,k));
    }
}
